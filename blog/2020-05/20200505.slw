title: Подршка за чланке
date: 2020-05-05T21:34:03
description: Другачији начин употребе Markdown-а у Nuxt.js-у
image: https://strahinja.org/img/preview-blog-strahinja-org.webp
imageAlt: Цртеж врха пенкала са умањеним логом са иницијалима СР и текстом //strahinja.org
id: podrska-za-clanke
tags:
    - Markdown
    - SSR
    - SSG
    - Nuxt.js
categories:
    - ажурирања сајта
visible: true
---

Данас сам довршио додавање почетног система за приказивање чланака у
_Markdown_-у. За разлику од тога како сам (за сада) реализовао приказивање
чланака овог блога, у страницама из одељка „[Текстови][1]“ нисам користио
[frontmatter-markdown-loader][2]. Разлог за ово је што је тај пакет за _Nuxt_
прилагођен ситуацији у којој се серверски део апликације заиста извршава на
_Node.js_ серверу и само шаље донекле или делимично обрађен садржај клијентском
делу. Уколико хостујемо сајт на статичком серверу, каква је већина (јефтиних)
хостинг понуда код домаћих провајдера, користићемо _SSG_, тј. статички генерисан
сајт. Ово не оставља места за додавање и уређивање чланака „у лету“, преко
интерфејса саме апликације, па сам одлучио да директно искористим `markdown-it`.

Пре свега, направио сам фајл `markdown-it.js` са следећим садржајем:

```javascript
import markdownIt from 'markdown-it';
import markdownItAbbr from 'markdown-it-abbr';
//...

var md = new markdownIt({html: true})
    .use(markdownItAbbr)
    //...
    ;

//...

export { md };
```

а затим и фајл `plugins/markdown-it.js`:


```javascript
import { md } from '../markdown-it';

export default({ app }, inject) =>
{
    inject('mdRender', markdown => md.render(markdown));
};

```

Тиме се функција `render()` убацује у _Nuxt_-ов `context` и _Vue_ инстанцу, па
може да јој се приступи преко `context.app.$mdRender()` или `this.$mdRender()`.
Сада једноставно могу да у оквиру компоненте странице напишем:

```
<template lang="pug">
    static-markdown(:markdown="markdown")
</template>

<script>
import StaticMarkdown from '~/components/StaticMarkdown';
export default {
    name: 'Koord',
    components: { StaticMarkdown },
    data()
    {
        return {
            markdown: '',
        };
    },
    async asyncData({ store, app })
    {
        let linkId = 'koord';
        await store.dispatch('articles/loadArticle', { linkId },
                             { root: true });
        let article = store.getters['articles/article'];
        return {
            markdown: article && article.markdown
                ? app.$mdRender(article.markdown)
                : ''
        };
    }
};
</script>

```

и _Markdown_ ће бити преведен у _HTML_, у време генерисања страница, што
омогућава видљивост претраживачима.  Истовремено, постоји могућност накнадне
хидрације подацима из базе. Планирам да овакву комбинацију евентуално применим и
на чланке овог блога.

*[SSG]: Static Site Generation
*[HTML]: HyperText Markup Language

[1]: https://strahinja.org/tekstovi
[2]: https://github.com/hmsk/frontmatter-markdown-loader


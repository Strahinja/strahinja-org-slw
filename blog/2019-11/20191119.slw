---
title: Гистови у Markdown-у
date: 2019-11-19T00:00:00.000Z
description: Како укључити гист у чланак блога
image: https://strahinja.org/img/blog/20191119-01.webp
imageAlt: Лого Nuxt.js-а и Github Gist-а
id: gistovi-u-markdown-u
categories:
    - ажурирања сајта
tags:
    - GitHub
    - Nuxt.js
    - гистови
    - gists
gistId: de6b3f80a4e5b67cf82bbacf89d21b00
gist: {}
visible: true
---

Ових дана после мање паузе радим на неколико делова мог сајта, па једва стижем
да нешто и напишем о ономе шта додам. Недавно сам тако додао подршку за
учитавање [гистова][1] у чланке на овом блогу.

За оне који не знају шта су то _гистови (gists),_ ради се о фајловима, или
деловима фајлова, са изворним кодом које је могуће делити и чак _fork_-овати као
било који други фајл на _GitHub_-у. Просто поставите мини-репо са једним или
више фајлова и поделите његов УРЛ. Сјајно! :smiley:

Ова могућност, која је уједно и тест динамичких компонената о којима сам
[недавно писао][2], ми је била посебан изазов и уједно извор материјала за учење
_Nuxt.js_-а. Видећемо које су неке од карактеристичних тачака које сам прешао
приликом њеног развоја.

## Почетак

Рад са гистовима почињемо посетом УРЛ-а [https://gist.github.com][3], где ће они
које означимо као јавне бити доступни на адреси облика

>`https://gist.github.com/[корисничко_име]/[хеш]`

Верзији гиста у формату _JSON_ можемо приступити додавањем `.json` на крај те
адресе, дакле:

> `https://gist.github.com/[корисничко_име]/[хеш].json`

Простим позивом `this.$axios.$get()` или `this.$http.$get()`, у зависности од
тога да ли користимо модул [_axios_][4] или [_http_][5], учитамо тај _JSON_ и
посао је готов, зар не?

Нажалост, то није баш тако. Уколико вам не смета подразумевано _HTML_
форматирање поља `div` насталог _JSON_ објекта, или чињеница да се сви фајлови
заједно налазе у том (скаларном) пољу, и то је довољно. За било шта више,
потребно је учитати гист преко [_API_-ја][6].

## API

За просто учитавање довољно је методом _GET_ приступити УРЛ-у

> `http://api.github.com/gists/[хеш]`

где је `[хеш]` хеш код вашег гиста, исти као у претходном случају. Резултат је
опет _JSON_ објекат, али који укључује фајлове у сировом облику као засебна
поља.

## Код

Конкретан код сам раздвојио на онај који је оријентисан на податке (_Vuex
store_) и презентациони (компонента `Gist`). Ево најзанимљивијих делова:

<blog-gist filename="Gist.vue"
:gist="gist"></blog-gist>

`Gist.vue` је компонента за приказивање гиста која је намењена директном
укључивању у _Markdown_ фајл. Пошто се фајл преко _API_-ја учитава као чист
текст, даље се са његовим садржајем може радити било шта. На пример, можемо
означити појединачне линије или истаћи жељени _keyword_. Ова компонента се у
_Markdown_ фајл укључује на следећи начин:

<blog-gist filename="extra-component.md"
:gist="gist"></blog-gist>

[1]: https://help.github.com/en/github/writing-on-github/creating-gists
[2]: https://strahinja.org/blog/20191026
[3]: https://gist.github.com
[4]: https://axios.nuxtjs.org
[5]: https://http.nuxtjs.org
[6]: https://developer.github.com/v3/gists

*[УРЛ]: Унификовани ресурсни локатор
*[HTML]: Hypertext Markup Language

